[{"D:\\workspace\\todo-react\\src\\index.jsx":"1","D:\\workspace\\todo-react\\src\\modules\\card\\card.jsx":"2","D:\\workspace\\todo-react\\src\\reducers\\index.js":"3","D:\\workspace\\todo-react\\src\\modules\\addtask\\addtask.jsx":"4","D:\\workspace\\todo-react\\src\\modules\\addbanner\\addbanner.jsx":"5"},{"size":9903,"mtime":1612392416165,"results":"6","hashOfConfig":"7"},{"size":3418,"mtime":1610906386660,"results":"8","hashOfConfig":"7"},{"size":3187,"mtime":1612392051413,"results":"9","hashOfConfig":"7"},{"size":631,"mtime":1610905764702,"results":"10","hashOfConfig":"7"},{"size":947,"mtime":1610905764701,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"ojw9og",{"filePath":"14","messages":"15","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"D:\\workspace\\todo-react\\src\\index.jsx",["26","27","28","29","30","31","32","33","34","35","36","37"],"D:\\workspace\\todo-react\\src\\modules\\card\\card.jsx",["38","39","40","41","42","43"],"import React, { Component } from 'react'\r\nimport styles from './card.module.scss';\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight, faEdit, faTrash, faCheck, faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass Card extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            title: null, \r\n            desc: null,\r\n            isHovered: null\r\n        };\r\n    }\r\n    handleChange = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n    render() {\r\n        const { \r\n             taskName,\r\n             taskDesc,\r\n             isEditing, \r\n             onEditClick, \r\n             onDelTask, \r\n             onSubmit, \r\n             onCancel, \r\n             onMove,\r\n        } = this.props\r\n\r\n        const data = {\r\n            desc: this.state.desc,\r\n            title: this.state.title\r\n        }\r\n\r\n        if(isEditing){\r\n            return(\r\n                // Editing mode\r\n                <div className={styles.card__edit}>\r\n                    <div className={styles.card__controls_hover}>\r\n                        <a href='#' onClick={() => {onSubmit(data)}} className={styles.navIconSubmit}><FontAwesomeIcon icon={faCheck}/></a>\r\n                        <a href='#' onClick={onCancel}><FontAwesomeIcon icon={faTimes}/></a>\r\n                    </div>\r\n                    <div className={styles.card__title}>\r\n                        <input type='text' name={'title'} placeholder={'Title'} defaultValue={taskName} onChange={this.handleChange}></input>\r\n                    </div>\r\n                    <div className={styles.card__desc}>\r\n                        <textarea placeholder={'Description'} name={'desc'} cols=\"25\" rows=\"5\" defaultValue={taskDesc} onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div className={styles.card} onMouseEnter={() => {this.setState({isHovered: true})}} onMouseLeave={() => {this.setState({isHovered: false})}}>\r\n                    <div className={this.state.isHovered ? styles.card__controls_hover : styles.card__controls}>\r\n                        <a href='#' onClick={() => {onMove('left')}} className={styles.navIcon}><FontAwesomeIcon icon={faArrowLeft}/></a>\r\n                        <a href='#' onClick={() => {onMove('right')}} className={styles.navIcon}><FontAwesomeIcon icon={faArrowRight}/></a>\r\n                        <a href='#' onClick={onEditClick} className={styles.navIcon}><FontAwesomeIcon icon={faEdit} /></a>\r\n                        <a href='#' onClick={onDelTask}><FontAwesomeIcon icon={faTrash}/></a>\r\n                    </div>\r\n                    <div className={styles.title}>\r\n                        {taskName}\r\n                    </div>\r\n\r\n                    {taskDesc &&< div className={styles.desc}>{taskDesc}</div> }\r\n\r\n                    \r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nCard.propTypes = {\r\n    taskName: PropTypes.string.isRequired,\r\n    taskDesc: PropTypes.string.isRequired,\r\n    isEditing: PropTypes.bool.isRequired,\r\n    onEditClick: PropTypes.func,\r\n    onDelTask: PropTypes.func,\r\n    onCancel: PropTypes.func,\r\n    onSubmit: PropTypes.func,\r\n    onMove: PropTypes.func,\r\n}\r\n\r\nexport default Card",["44","45"],"D:\\workspace\\todo-react\\src\\reducers\\index.js",["46","47","48","49","50","51","52","53","54"],"\r\nconst defaultState = {\r\n  tasks: [/*\r\n    {\r\n      taskName: \"Buy Groceries\",\r\n      taskDesc: \"\",\r\n      taskTarget: 0\r\n    },\r\n    {\r\n      taskName: \"Buy that Battlefield 1\",\r\n      taskDesc: \"\",\r\n      taskTarget: 0,\r\n    },\r\n    {\r\n      taskName: \"Check for dollar/try price\",\r\n      taskDesc: \"\",\r\n      taskTarget: 0,\r\n    },\r\n    {\r\n      taskName: \"Zoom meeting @ 16:00\",\r\n      taskDesc: \"With our teachers!!\",\r\n      taskTarget: 0,\r\n    },\r\n    {\r\n      taskName: \"Watch: Interstellar\",\r\n      taskDesc: \"Watch: Martian\",\r\n      taskTarget: 2,\r\n    },\r\n    {\r\n      taskName: \"Finish the project\",\r\n      taskDesc: \"Already finished. I see.\",\r\n      taskTarget: 2,\r\n    }*/\r\n  ],\r\n  edit: {\r\n    editing: false,\r\n    id: 0,\r\n  }\r\n}\r\n\r\nconst addTaskDefault = (target) => {\r\n  const newTask = {\r\n    taskName: \"New Task\",\r\n    taskDesc: \"Description (Optional)\",\r\n    taskTarget: target\r\n  }\r\n  return newTask\r\n}\r\n\r\nexport default (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_TASK':\r\n      let newState = {...state};\r\n      newState.tasks.push(addTaskDefault(action.payload));\r\n      return newState /*[...state.tasks, addTaskDefault(action.payload)];*/\r\n    case 'DEL_TASK':\r\n      \r\n      let theNewTasks = {...state};\r\n      theNewTasks.tasks.map(function(key, index) {\r\n        console.log(key);\r\n        if(key.id == action.payload){\r\n          theNewTasks.tasks.splice(index, 1);\r\n        }\r\n      })\r\n      \r\n      /* indexe gÃ¶re sil\r\n      let newTasks = {...state};\r\n      newTasks.tasks.splice(action.payload, 1);*/\r\n      console.log(theNewTasks);\r\n      return theNewTasks\r\n    case 'CHANGE_TARGET':\r\n      if(action.payload.target == 'left'){\r\n\r\n        //console.log(state.tasks[action.payload.id].taskTarget);\r\n\r\n        state.tasks.map(function(key, index) {\r\n          if(parseInt(key.id) == action.payload.id){\r\n            if(state.tasks[index].taskTarget > 0){\r\n              state.tasks[index].taskTarget--;\r\n            }\r\n          }\r\n        })\r\n        \r\n      }else if(action.payload.target == 'right'){\r\n\r\n        state.tasks.map(function(key, index) {\r\n          if(parseInt(key.id) == action.payload.id){\r\n            if(state.tasks[index].taskTarget < 2){\r\n              state.tasks[index].taskTarget++;\r\n            }\r\n          }\r\n        })\r\n        \r\n      }\r\n      return state\r\n    case 'EDIT_MODE':\r\n      console.log(\"inside edit mode\");\r\n      state.edit.editing = !state.edit.editing;\r\n      state.edit.id = action.payload;\r\n      return state\r\n    case 'EDIT_SUBMIT':\r\n      console.log(\"state tasks: \", state.tasks);\r\n      if(action.payload.data.title){\r\n        state.tasks[action.payload.taskIndex].taskName = action.payload.data.title;\r\n        console.log(\"changed title to: \"+action.payload.data.title);\r\n      }\r\n      if(action.payload.data.desc){\r\n        state.tasks[action.payload.taskIndex].taskDesc = action.payload.data.desc;\r\n        console.log(\"changed desc to: \"+action.payload.data.desc);\r\n      }\r\n      return state\r\n    case 'SET_TASKS':\r\n      state.tasks = action.payload;\r\n      console.log(\"updated: \", state);\r\n      return state\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\workspace\\todo-react\\src\\modules\\addtask\\addtask.jsx",["55"],"import React, { Component } from 'react';\r\nimport styles from './addtask.module.scss';\r\nimport PropTypes from 'prop-types'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\r\n\r\nclass AddTask extends Component {\r\n    render (){\r\n        const { onAddTask } = this.props\r\n        return (\r\n            <div className={styles.cardAdd}>\r\n                <a href='#' onClick={onAddTask}><FontAwesomeIcon icon={faPlus} /></a>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddTask.propTypes = {\r\n    onAddTask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTask","D:\\workspace\\todo-react\\src\\modules\\addbanner\\addbanner.jsx",[],{"ruleId":"56","severity":1,"message":"57","line":71,"column":23,"nodeType":"58","messageId":"59","endLine":71,"endColumn":32},{"ruleId":"60","severity":1,"message":"61","line":72,"column":38,"nodeType":"62","messageId":"63","endLine":72,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":130,"column":31,"nodeType":"66","messageId":"67","endLine":130,"endColumn":35},{"ruleId":"56","severity":1,"message":"57","line":169,"column":24,"nodeType":"58","messageId":"59","endLine":169,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":175,"column":41,"nodeType":"62","messageId":"63","endLine":175,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":183,"column":13,"nodeType":"70","messageId":"71","endLine":193,"endColumn":14},{"ruleId":"60","severity":1,"message":"72","line":206,"column":55,"nodeType":"62","messageId":"63","endLine":206,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":213,"column":47,"nodeType":"62","messageId":"63","endLine":213,"endColumn":49},{"ruleId":"60","severity":1,"message":"72","line":223,"column":55,"nodeType":"62","messageId":"63","endLine":223,"endColumn":57},{"ruleId":"60","severity":1,"message":"61","line":230,"column":47,"nodeType":"62","messageId":"63","endLine":230,"endColumn":49},{"ruleId":"60","severity":1,"message":"72","line":240,"column":56,"nodeType":"62","messageId":"63","endLine":240,"endColumn":58},{"ruleId":"60","severity":1,"message":"61","line":247,"column":48,"nodeType":"62","messageId":"63","endLine":247,"endColumn":50},{"ruleId":"73","severity":1,"message":"74","line":41,"column":25,"nodeType":"75","endLine":41,"endColumn":103},{"ruleId":"73","severity":1,"message":"74","line":42,"column":25,"nodeType":"75","endLine":42,"endColumn":56},{"ruleId":"73","severity":1,"message":"74","line":56,"column":25,"nodeType":"75","endLine":56,"endColumn":97},{"ruleId":"73","severity":1,"message":"74","line":57,"column":25,"nodeType":"75","endLine":57,"endColumn":98},{"ruleId":"73","severity":1,"message":"74","line":58,"column":25,"nodeType":"75","endLine":58,"endColumn":86},{"ruleId":"73","severity":1,"message":"74","line":59,"column":25,"nodeType":"75","endLine":59,"endColumn":57},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":50,"column":1,"nodeType":"82","endLine":119,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":59,"column":29,"nodeType":"58","messageId":"59","endLine":59,"endColumn":37},{"ruleId":"60","severity":1,"message":"61","line":61,"column":19,"nodeType":"62","messageId":"63","endLine":61,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":72,"column":32,"nodeType":"62","messageId":"63","endLine":72,"endColumn":34},{"ruleId":"56","severity":1,"message":"57","line":76,"column":25,"nodeType":"58","messageId":"59","endLine":76,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":77,"column":31,"nodeType":"62","messageId":"63","endLine":77,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":84,"column":38,"nodeType":"62","messageId":"63","endLine":84,"endColumn":40},{"ruleId":"56","severity":1,"message":"57","line":86,"column":25,"nodeType":"58","messageId":"59","endLine":86,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":87,"column":31,"nodeType":"62","messageId":"63","endLine":87,"endColumn":33},{"ruleId":"73","severity":1,"message":"74","line":12,"column":17,"nodeType":"75","endLine":12,"endColumn":49},"array-callback-return","Array.prototype.map() expects a return value from function.","FunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]